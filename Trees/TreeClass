#include <bits/stdc++.h>

using namespace std;

//way one
template <typename T>
class Tree{
    public:
    T data;
    vector <Tree <T> * > children;

    void input()
    {
        T data;
        cin >> data;
        this->data = data;
        int n;
        cin >> n;
        for(int i = 0 ;i <n;i++)
        {
            Tree <T>  * b = new Tree <T>;
            this->children.push_back(b);
            b->input();
        }
        return;
    }
    void output()
    {
        cout << this->data << endl;
        for(int i = 0; i < this->children.size();i++)
        {
            this->children[i]->output();
        }
        return;
    }
};


//way two
template <typename T>
class TreeNode
{
    public:
    T data;
    vector <TreeNode * > children;
    TreeNode(T data)
    {
        this->data = data;
    }
};

TreeNode <int> * input()
{
    int data;
    cin >> data;
    TreeNode <int> * temp = new TreeNode(data);
    int n;
    cin >> n;
    for(int i = 0;i<n;i++)
    {
        TreeNode <int>* a = input();
        temp->children.push_back(a);
    }
    return temp;
    
}

void output(TreeNode <int> * temp)
{
    cout << temp->data << endl;
     for(int i = 0;i<temp->children.size();i++)
    {
        output(temp->children[i]);
    }
    return;
}


int main()
{ 
    TreeNode <int>  *a = input();
    output(a);
    
}
