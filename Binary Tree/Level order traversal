For a given a Binary Tree of type integer, print it in a level order fashion where each level will be printed on a new line. Elements on every level will be printed in a linear fashion and a single space will separate them.
Example:
alt txt

For the above-depicted tree, when printed in a level order fashion, the output would look like:

10
20 30 
40 50 60
Where each new line denotes the level in the tree.


Solution:
void printLevelWise(BinaryTreeNode<int> *root) 
{
    // Write your code here
    if(root == NULL) return;
    else
    {
        queue <BinaryTreeNode<int> *> q;
        q.push(root);
        q.push(NULL);
        while(q.size() != 0)
        {
            if(q.front() != NULL)             
            {
                cout << q.front()->data << " ";
                if(q.front()->left != NULL) q.push(q.front()->left);
                if(q.front()->right != NULL) q.push(q.front()->right);
                
            }
            else
            {
                if(q.size() == 1) return;
                cout << endl;
                q.push(NULL);
            }
            q.pop();
            
        }
        return;
    }
    return;
}
